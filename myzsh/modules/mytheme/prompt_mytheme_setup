prompt_mytheme_help() {
  cat <<EOH
Right prompt can show Node.js and Ruby versions, and current Python virtualenv.

  prompt mytheme [node [python [ruby]]]

Argument order is respected.
EOH
}

prompt_mytheme_precmd() {
  if (( $+functions[git-info] )); then
    git-info
  fi
  
  if (( $+functions[node-info] )); then
    node-info
  fi
  
  if (( $+functions[ruby-info] )); then
    ruby-info
  fi
  
  if (( $+functions[python-info] )); then
    python-info
  fi
}

prompt_mytheme_setup() {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  
  set -A versions "$@"
  
  prompt_opts=(cr percent subst)
  
  # Load required functions.
  autoload -Uz add-zsh-hook
  
  # Add hook to set up prompt parameters before each command.
  add-zsh-hook precmd prompt_mytheme_precmd
  
  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  
  zstyle ':prezto:module:git:info:branch'    format "${PR_BLUE}(%b)${PR_RESET}"
  zstyle ':prezto:module:git:info:ahead'     format "${PR_RED}A%A${PR_RESET}"
  zstyle ':prezto:module:git:info:behind'    format "${PR_CYAN}B%B${PR_RESET}"
  zstyle ':prezto:module:git:info:unmerged'  format "${PR_BOLD}${PR_MAGENTA}⚡︎${PR_RESET}"
  zstyle ':prezto:module:git:info:untracked' format "${PR_BOLD}${PR_RED}u${PR_RESET}"
  zstyle ':prezto:module:git:info:modified'  format "${PR_BOLD}${PR_YELLOW}m${PR_RESET}"
  zstyle ':prezto:module:git:info:added'     format "${PR_BOLD}${PR_GREEN}a${PR_RESET}"
  zstyle ':prezto:module:git:info:keys'      format 'branch' '%b' 'status' '%A%B%U%u%m%a'
  
  zstyle ':prezto:module:node:info:version'      format "${PR_LGREEN}[%v]${PR_RESET}"
  zstyle ':prezto:module:ruby:info:version'      format "${PR_LRED}[%v]${PR_RESET}"
  zstyle ':prezto:module:python:info:virtualenv' format "${PR_LBLUE}[%v]${PR_RESET}"
  
  zstyle ':prezto:module:editor:info:keymap:primary'           format '' #'» '
  zstyle ':prezto:module:editor:info:keymap:primary:insert'    format '' #'[i] '
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '[o] '
  zstyle ':prezto:module:editor:info:keymap:alternate'         format '« '
  zstyle ':prezto:module:editor:info:completing'               format '⋯'
  
  # Define prompts.
  PROMPT=''
  if $(ps $PPID | grep mc; exit $((1-$?))); then
      PROMPT+='$(line_prompt_string)'
  fi
  PROMPT+='$(sudo_prompt_string)'
  PROMPT+='$(ssh_prompt_string)'
  PROMPT+='%~ '
  PROMPT+='$(git_prompt_string)'
  PROMPT+='$(editor_prompt_string)'
  
  RPROMPT=''
  RPROMPT+='$(version_prompt_string)'
  RPROMPT+='$(retval_prompt_string)'
}

line_prompt_string() {
  echo "${PR_WHITE}${(l:$COLUMNS::―:)}${PR_RESET}\n"
}

sudo_prompt_string() {
  if [ ! -z "${SUDO_USER}" -a "${USER}" != "${SUDO_USER}" ]; then
    echo "${PR_RED}#${PR_RESET} "
  fi
}

ssh_prompt_string() {
  if [ ! -z "${SSH_CLIENT}" ]; then
    echo "${PR_GREEN}@${PR_RESET} "
  fi
}

git_prompt_string() {
  local out=''
  out+="${git_info:+${(e)git_info[branch]} }"
  if [ $git_info[status] ]; then
    out+="${PR_GREEN}[${PR_RESET}"
    out+="${(e)git_info[status]}"
    out+="${PR_GREEN}]${PR_RESET} "
  fi
  echo $out
}

editor_prompt_string() {
  echo $PR_YELLOW${(j//)editor_info}$PR_RESET
}

version_prompt_string() {
  set -A out
  
  for v in $versions; do
    case $v in
      node )
        out+="${node_info[version]}"
        ;;
      ruby )
        out+="${ruby_info[version]}"
        ;;
      python )
        out+="${python_info[virtualenv]}"
        ;;
    esac
  done
  echo ${(j/ /)out}
}

retval_prompt_string() {
  echo "${PR_LRED}%(?.. [%?])${PR_RESET}"
}

prompt_mytheme_preview() () {
  prompt_preview_theme mytheme "$@"
}

prompt_mytheme_setup "$@"
